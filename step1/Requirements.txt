1. Write a small program in C++ that will contain the following:
	a. Create a class Job - done
	b. Create a subclass Programmer 
	c. Create a subclass Pilot
	d. The job class should provide an interface that does at least 4 actions. 
		i. Please decide what 4 actions you would like your job to do, with each action being represented as a function.
	e. Dynamically allocate each type of job.
	f. Store each instance in a collection.
	g. Iterate the collection and call each of the available interface functions.
	h. Create a template function that will test if the provided values are within a range. Call the function and print out the inputs and result. The following should execute assuming httpResonse is a uint32_t value:
		i. IsInBounds<uint32_t>(httpResonseCode, 500, 599)
	i. Create a function that will take a vector of strings and a test function, It should return how many items in the collection matched the test. Then print out the result.
		i. auto theStrings = vector<std::string> { “one”, “two”,  “test”};
		ii. auto count = ContainsTheString([](const std::string& tested) { return tested == “test” }, theStrings);
	j. Write a CVS file of your choice to the system, then read the data and transpose it’s content.
		For example:
			example.csv has the following content:
				id,type,name
				0,bird,blue
				1,cat,felix
				2,dog,toto
			Transposed, it would be: 	
				id 0 1 2
				type bird cat dog
				name blue felix toto
		
		i. Write the CSV file of your choice to your filesystem, then have your code read the data and output it. 
	k. Write any other code you feel would show off your understanding of C/C++ and programming in general. Bonus: Variadic Template /w usage. 
	l. Please add passing unit tests. 
	m. All The source can be in 1 file, it should compile and there should be no runtime errors, and no memory leaks. Use built in types freely to help you manage resources. 
